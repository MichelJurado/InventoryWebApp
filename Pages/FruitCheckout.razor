@using System.ComponentModel.DataAnnotations;
@using InventoryWebApp.Data
@using Microsoft.Data.SqlClient
@inject FruitDapperService fruitservice
@inject IJSRuntime js
@page "/FruitCheckout/{CurrentID}"

<h3>FruitCheckout</h3>


<p>Tastes great</p>

@if(fruits == null)
{
    <p>Loading</p>
}
else
{
    <div>
        <table>
            <thead>
                <tr>
                    <th>@fruits.Fruit</th>
                    
                </tr>
            </thead>
            <tbody>
                <img src="@convertImageToDisplay(fruits.Image)" width="200px;"/>
                @fruits.Price
            </tbody>
        </table>
    </div>
}

<button @onclick="UpdateF">Buy</button>

@code {

    [Parameter]
    public string CurrentID { get; set; }
    FruitsAvailable fruits = new FruitsAvailable();

    protected override async Task OnInitializedAsync()
    {
        fruits = await Task.Run(() => fruitservice.GetFruitsById(Convert.ToInt32(CurrentID)));
    }

    protected async void UpdateF()
    {
        fruitservice.UpdateFruits(fruits);
        await js.InvokeVoidAsync("alert", "Purchase Complete");
    }

        /*
     * need this function to convert the binary into an image
     * Link to video here https://www.youtube.com/watch?v=C0q5sER8BMU
     * 
     * In sql to add an image to a column use this example
     *  UPDATE FruitsAvailable
        SET Image = (SELECT BulkColumn
        From Openrowset(Bulk 'C:\Users\mjurado\Downloads\Red_Apple.jpg',Single_Blob) as img)
        WHERE FruitsAvailable.ID = 1;
     */
    string convertImageToDisplay(byte[] image)
    {
        if(image!= null)
        {
            var base64 = Convert.ToBase64String(image);
            var fs = string.Format("data:image/jpg;base64,{0}", base64);
            return fs;
        }
        return "";
    }
}
